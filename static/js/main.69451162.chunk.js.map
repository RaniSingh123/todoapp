{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","text","App","state","currentItem","key","handleInput","bind","addItem","e","this","setState","target","value","Date","now","preventDefault","newItem","newItems","id","onSubmit","type","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAe,I,kBCiBAA,MAdf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,4BAAID,EAAKE,QADoB,eAKzC,OACI,qBAAKD,UAAU,YAAf,SAA4BJ,KC8CrBM,E,kDArDb,WAAYP,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAM,CACTN,MAAM,GACNO,YAAY,CACVH,KAAK,GACLI,IAAI,KAIP,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAClB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBAXC,E,+CAapB,SAAYE,GACVC,KAAKC,SAAS,CACZP,YAAY,CACVH,KAAKQ,EAAEG,OAAOC,MACdR,IAAIS,KAAKC,W,qBAIf,SAAQN,GACNA,EAAEO,iBACF,IAAMC,EAAUP,KAAKP,MAAMC,YAC3B,GAAkB,KAAfa,EAAQhB,KAAU,CACnB,IAAMiB,EAAS,GAAD,mBAAKR,KAAKP,MAAMN,OAAhB,CAAuBoB,IACrCP,KAAKC,SAAS,CACZd,MAAMqB,EACNd,YAAY,CACVH,KAAK,GACLI,IAAI,S,oBAMV,WACA,OACC,sBAAKL,UAAU,MAAf,UACG,mCACL,0CACK,uBAAMmB,GAAG,aAAaC,SAAUV,KAAKF,QAArC,UACE,uBAAOa,KAAK,OAAOC,YAAY,aAAaT,MAAOH,KAAKP,MAAMC,YAAYH,KAAMsB,SAAUb,KAAKJ,cAC/F,wBAAQe,KAAK,SAAb,uBAIN,cAAC,EAAD,CAAWxB,MAAQa,KAAKP,MAAMN,e,GAhDd2B,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69451162.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n        {\r\n            return <div className=\"list\" key=\"item.key\">\r\n                <p>{item.text}</p>\r\n            </div>\r\n        })\r\n        \r\n    return(\r\n        <div className=\"listitems\">{listItems}</div>\r\n       \r\n    )\r\n}\r\nexport default ListItems;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ListItems from './ListItems'\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n  \n    } \n     this.handleInput = this.handleInput.bind(this);\n      this.addItem=this.addItem.bind(this);\n  }\nhandleInput(e){\n  this.setState({\n    currentItem:{\n      text:e.target.value,\n      key:Date.now()\n    }\n  })\n}\naddItem(e){\n  e.preventDefault();\n  const newItem = this.state.currentItem; \n  if(newItem.text!==\"\"){\n    const newItems=[...this.state.items, newItem];\n    this.setState({\n      items:newItems,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n  }\n \n}\n  render(){\n  return (\n   <div className=\"App\">\n      <header>\n <h1>Todo App</h1>\n      <form id=\"to-do-form\" onSubmit={this.addItem}>\n        <input type=\"text\" placeholder=\"Enter Text\" value={this.state.currentItem.text} onChange={this.handleInput} />\n        <button type=\"submit\">Add</button>\n\n      </form>\n    </header>\n  <ListItems items= {this.state.items}></ListItems>\n   </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}